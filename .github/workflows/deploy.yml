name: Build and Deploy to Hetzner

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build site
        run: npm run build

      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.HETZNER_SSH_KEY }}

      - name: Add host to known_hosts
        env:
          HOST: ${{ secrets.HETZNER_HOST }}
          PORT: ${{ secrets.HETZNER_PORT }}
        run: |
          mkdir -p ~/.ssh
          if [ -z "$PORT" ]; then PORT=22; fi
          ssh-keyscan -p "$PORT" "$HOST" >> ~/.ssh/known_hosts
        shell: bash

      - name: Deploy via rsync (atomic)
        env:
          HOST: ${{ secrets.HETZNER_HOST }}
          USER: ${{ secrets.HETZNER_USER }}
          REMOTE_PATH: ${{ secrets.HETZNER_REMOTE_PATH }}
          PORT: ${{ secrets.HETZNER_PORT }}
          KEEP_RELEASES: 5
        run: |
          # defaults
          if [ -z "${PORT}" ]; then PORT=22; fi
          if [ -z "${REMOTE_PATH}" ]; then echo "REMOTE_PATH is not set"; exit 1; fi

          TIMESTAMP=$(date +"%Y%m%d%H%M%S")
          RELEASE_DIR="releases/${TIMESTAMP}-${GITHUB_RUN_ID}"

          echo "Creating remote release dir: ${REMOTE_PATH}/${RELEASE_DIR}"
          ssh -p "${PORT}" "${USER}@${HOST}" "mkdir -p '${REMOTE_PATH}/${RELEASE_DIR}'"

          echo "Rsyncing ./dist -> ${USER}@${HOST}:${REMOTE_PATH}/${RELEASE_DIR}"
          rsync -az --delete -e "ssh -p ${PORT}" ./dist/ "${USER}@${HOST}:${REMOTE_PATH}/${RELEASE_DIR}/"

          echo "Updating current symlink to point to new release"
          ssh -p "${PORT}" "${USER}@${HOST}" "ln -sfn '${REMOTE_PATH}/${RELEASE_DIR}' '${REMOTE_PATH}/current' && echo 'symlink updated'"

          echo "Cleaning up old releases, keeping ${KEEP_RELEASES}"
          ssh -p "${PORT}" "${USER}@${HOST}" "cd '${REMOTE_PATH}' && ls -1dt releases/* 2>/dev/null | tail -n +$((KEEP_RELEASES+1)) | xargs -r rm -rf || true"
        shell: bash
